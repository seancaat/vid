{"remainingRequest":"/Users/catangui/Documents/GitHub/er-resistance/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/catangui/Documents/GitHub/er-resistance/src/components/LiveVideo.vue?vue&type=style&index=0&id=64a80f6f&scoped=true&lang=scss&","dependencies":[{"path":"/Users/catangui/Documents/GitHub/er-resistance/src/components/LiveVideo.vue","mtime":1611807761956},{"path":"/Users/catangui/Documents/GitHub/er-resistance/node_modules/css-loader/dist/cjs.js","mtime":1607551087635},{"path":"/Users/catangui/Documents/GitHub/er-resistance/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1607551087951},{"path":"/Users/catangui/Documents/GitHub/er-resistance/node_modules/postcss-loader/src/index.js","mtime":1607551087850},{"path":"/Users/catangui/Documents/GitHub/er-resistance/node_modules/sass-loader/dist/cjs.js","mtime":1607551095680},{"path":"/Users/catangui/Documents/GitHub/er-resistance/node_modules/cache-loader/dist/cjs.js","mtime":1607551081144},{"path":"/Users/catangui/Documents/GitHub/er-resistance/node_modules/vue-loader/lib/index.js","mtime":1607551087951}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmRpdiB7CiAgaGVpZ2h0OiAxMDAlOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBib3gtc2l6aW5nOiBib3JkZXItYm94OwoKICAuY2FtIHsKICAgIG92ZXJmbG93OiBoaWRkZW47CiAgfQoKICB2aWRlbyB7CiAgICAvLyBwb3NpdGlvbjogYWJzb2x1dGU7IAogICAgcmlnaHQ6IDA7IAogICAgYm90dG9tOiAwOwogICAgbWluLXdpZHRoOiAxMDAlOyAKICAgIG1pbi1oZWlnaHQ6IDEwMCU7CiAgICB3aWR0aDogYXV0bzsgCiAgICBoZWlnaHQ6IGF1dG87IAogICAgei1pbmRleDogLTEwMDsKICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7CiAgfQoKICAjb3ZlcmxheSwKICAub3ZlcmxheSB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IDA7CiAgICBsZWZ0OiAwOwogIH0KCiAgYnV0dG9uIHsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIGxlZnQ6IDUwJTsKICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpOwogICAgYm9yZGVyLXJhZGl1czogJGJyLW07CiAgfQp9Cgo="},{"version":3,"sources":["LiveVideo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+KA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LiveVideo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n <div>\n   <div class=\"cam\">\n      <video id=\"webcam\" autoplay muted playsinline />\n      <canvas id=\"overlay\"></canvas>\n   </div>\n    <button v-if=\"buttonVisible\" v-on:click=\"detectExpressions\">Turn on ER camera</button>\n  </div>\n</template>\n\n<script>\nimport * as faceapi from \"face-api.js\";\n\nconst minConfidenceFace = 0.5;\nconst faceapiOptions = new faceapi.SsdMobilenetv1Options({ minConfidenceFace });\n\nlet cam;\nlet isRunning = true;\nlet withBoxes = true;\n\nexport default {\n  name: \"LiveVideo\",\n  props: [\"buttonVisible\", \"detectOnLoad\"],\n  metaInfo: {\n    title: \"Live Video\"\n  },\n  data() {\n    return {\n      cam: null,\n      displaySize: null\n    }\n  },\n  mounted() {\n    let loadNet = async () => {\n      let detectionNet = faceapi.nets.ssdMobilenetv1;\n      await detectionNet.load(\"/models\");\n      await faceapi.loadFaceExpressionModel(\"/models\");\n      return detectionNet;\n    };\n\n    const initCamera = async (width, height) => {\n      const video = document.getElementById(\"webcam\");\n      video.width = width;\n      video.height = height;\n\n      this.displaySize = { width: video.width, height: video.height };\n      const canvas = document.getElementById(\"overlay\");\n      faceapi.matchDimensions(canvas, this.displaySize);\n\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: false,\n        video: {\n          facingMode: \"user\",\n          width: width,\n          height: height\n        }\n      });\n\n      video.srcObject = stream;\n      return new Promise(resolve => {\n        video.onloadedmetadata = () => {\n          resolve(video);\n        };\n      });\n    };\n\n    loadNet()\n      .then(net => {\n        return initCamera(600, 500);\n      })\n      .then(video => {\n        this.cam = video;\n        if (this.detectOnLoad) {\n          this.detectExpressions();\n        }\n      });\n  },\n  methods: {\n    async detectExpressions() {\n\n      setInterval(async () => {\n        // detect expression\n        const result = await faceapi\n          .detectSingleFace(this.cam, faceapiOptions)\n          .withFaceExpressions();\n\n        if (typeof result !== \"undefined\") {\n          const resizedResult = faceapi.resizeResults(result, {\n            width: this.cam.width,\n            height: this.cam.height\n          });\n\n        const canvas = document\n            .getElementById(\"overlay\");\n         canvas\n            .getContext(\"2d\")\n            .clearRect(\n              0,\n              0,\n              canvas.width,\n              canvas.height\n            );\n          faceapi.draw.drawDetections(\n            canvas,\n            resizedResult\n          );\n          faceapi.draw.drawFaceExpressions(\n            canvas,\n            resizedResult,\n            faceapiOptions.minConfidenceFace\n          );\n\n          let happiness = 0,\n            anger = 0,\n            sadness = 0,\n            surprise = 0,\n            fear = 0,\n            disgust = 0;\n          if (result.expressions.hasOwnProperty(\"happy\")) {\n            happiness = result.expressions.happy;\n          }\n          if (result.expressions.hasOwnProperty(\"angry\")) {\n            anger = result.expressions.angry;\n          }\n          if (result.expressions.hasOwnProperty(\"sad\")) {\n            sadness = result.expressions.sad;\n          }\n          if (result.expressions.hasOwnProperty(\"fearful\")) {\n            fear = result.expressions.fearful;\n          }\n          if (result.expressions.hasOwnProperty(\"disgusted\")) {\n            disgust = result.expressions.disgusted;\n          }\n          if (result.expressions.hasOwnProperty(\"surprised\")) {\n            surprise = result.expressions.surprised;\n          }\n\n          // interface responds\n          if (happiness > 0.65) {\n            if (document.getElementById(\"happiness\")) {\n              document.getElementById(\"happiness\").style.backgroundColor =\n                \"#DCDCDC\";\n            }\n          } else if (anger > 0.65) {\n            if (document.getElementById(\"anger\")) {\n              document.getElementById(\"anger\").style.backgroundColor = \"#DCDCDC\";\n            }\n          } else if (sadness > 0.65) {\n            if (document.getElementById(\"sadness\")) {\n              document.getElementById(\"sadness\").style.backgroundColor =\n                \"#DCDCDC\";\n            }\n          } else if (surprise > 0.65) {\n            if (document.getElementById(\"surprise\")) {\n              document.getElementById(\"surprise\").style.backgroundColor =\n                \"#DCDCDC\";\n            }\n          } else if (disgust > 0.65) {\n            if (document.getElementById(\"disgust\")) {\n              document.getElementById(\"disgust\").style.backgroundColor =\n                \"#DCDCDC\";\n            }\n          } else if (fear > 0.65) {\n            if (document.getElementById(\"fear\")) {\n              document.getElementById(\"fear\").style.backgroundColor = \"#DCDCDC\";\n            }\n          }\n        }\n      }, 100);\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\ndiv {\n  height: 100%;\n  position: relative;\n  box-sizing: border-box;\n\n  .cam {\n    overflow: hidden;\n  }\n\n  video {\n    // position: absolute; \n    right: 0; \n    bottom: 0;\n    min-width: 100%; \n    min-height: 100%;\n    width: auto; \n    height: auto; \n    z-index: -100;\n    background-size: cover;\n  }\n\n  #overlay,\n  .overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n\n  button {\n    position: relative;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    border-radius: $br-m;\n  }\n}\n\n</style>"]}]}