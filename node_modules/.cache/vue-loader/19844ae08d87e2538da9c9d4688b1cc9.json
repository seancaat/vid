{"remainingRequest":"/Users/catangui/Documents/GitHub/er-resistance/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/catangui/Documents/GitHub/er-resistance/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/catangui/Documents/GitHub/er-resistance/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/catangui/Documents/GitHub/er-resistance/src/views/Activity1.vue?vue&type=template&id=0c0de538&scoped=true&","dependencies":[{"path":"/Users/catangui/Documents/GitHub/er-resistance/src/views/Activity1.vue","mtime":1612232091432},{"path":"/Users/catangui/Documents/GitHub/er-resistance/node_modules/cache-loader/dist/cjs.js","mtime":1607551081144},{"path":"/Users/catangui/Documents/GitHub/er-resistance/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1607551087951},{"path":"/Users/catangui/Documents/GitHub/er-resistance/node_modules/cache-loader/dist/cjs.js","mtime":1607551081144},{"path":"/Users/catangui/Documents/GitHub/er-resistance/node_modules/vue-loader/lib/index.js","mtime":1607551087951}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}