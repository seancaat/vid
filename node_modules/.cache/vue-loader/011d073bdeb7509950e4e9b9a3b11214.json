{"remainingRequest":"/Users/catangui/Documents/GitHub/vid/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/catangui/Documents/GitHub/vid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/catangui/Documents/GitHub/vid/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/catangui/Documents/GitHub/vid/src/views/Research.vue?vue&type=template&id=34f00e55&scoped=true&","dependencies":[{"path":"/Users/catangui/Documents/GitHub/vid/src/views/Research.vue","mtime":1613578925670},{"path":"/Users/catangui/Documents/GitHub/vid/node_modules/cache-loader/dist/cjs.js","mtime":1607551081144},{"path":"/Users/catangui/Documents/GitHub/vid/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1607551087951},{"path":"/Users/catangui/Documents/GitHub/vid/node_modules/cache-loader/dist/cjs.js","mtime":1607551081144},{"path":"/Users/catangui/Documents/GitHub/vid/node_modules/vue-loader/lib/index.js","mtime":1607551087951}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29udGFpbmVyIiB9LCBbCiAgICBfYygibWFpbiIsIFsKICAgICAgIV92bS5zdWJtaXR0ZWQKICAgICAgICA/IF9jKAogICAgICAgICAgICAiZm9ybSIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgYWN0aW9uOiAiIiwgaWQ6ICJzdXJ2ZXkiIH0gfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogImludHJvIiB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5zdXJ2ZXkuaW50cm8pICsgIiAiKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJociIpLAogICAgICAgICAgICAgIF92bS5fbChfdm0uc3VydmV5LnF1ZXN0aW9ucywgZnVuY3Rpb24ocXVlc3Rpb24sIGluZGV4KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX2MoInAiLCB7IGtleTogaW5kZXggfSwgWwogICAgICAgICAgICAgICAgICBfYygibGFiZWwiLCBbX3ZtLl92KCIgIiArIF92bS5fcyhxdWVzdGlvbi50ZXh0KSldKSwKICAgICAgICAgICAgICAgICAgX2MoInRleHRhcmVhIiwgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAiZGF0YS1pbmRleCI6IGluZGV4LAogICAgICAgICAgICAgICAgICAgICAgZm9ybTogInN1cnZleSIsCiAgICAgICAgICAgICAgICAgICAgICByb3dzOiAiMTAiLAogICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICJQbGVhc2UgZXhwbGFpbiIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYnV0dG9uIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJzdWJtaXQiLCB2YWx1ZTogIkFkZCBteSBwZXJzcGVjdGl2ZSIgfSwKICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0uc3VibWl0U3VydmV5IH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdLAogICAgICAgICAgICAyCiAgICAgICAgICApCiAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgX3ZtLnN1Ym1pdHRlZAogICAgICAgID8gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmaW5pc2hlZC1nYW1lIiB9LCBbCiAgICAgICAgICAgIF9jKCJoMSIsIFtfdm0uX3YoX3ZtLl9zKF92bS5zdXJ2ZXkudGhhbmtZb3UpKV0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIndyYXAiIH0sIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJhcnRpY2xlIiwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoInAiLCBbX3ZtLl92KF92bS5fcyhfdm0uc3VydmV5LnApKV0pLAogICAgICAgICAgICAgICAgICBfdm0uX20oMCksCiAgICAgICAgICAgICAgICAgIF92bS5fbSgxKSwKICAgICAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgIlRvZ2V0aGVyLCB3ZSBjYW4gIiArCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uc3VydmV5Lmhhc2h0YWcxKSArCiAgICAgICAgICAgICAgICAgICAgICAgICIgYW5kICIgKwogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoX3ZtLnN1cnZleS5oYXNodGFnMikgKwogICAgICAgICAgICAgICAgICAgICAgICAiICIKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJidXR0b24iLCBhdHRyczogeyB0bzogIm1lbnUiIH0gfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgQmFjayB0byBtYWluIG1lbnUgIildCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygiYXNpZGUiLCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIiBTaGFyZTogIiksCiAgICAgICAgICAgICAgICBfYygidWwiLCBbCiAgICAgICAgICAgICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiaHR0cHM6Ly90d2l0dGVyLmNvbS9pbnRlbnQvdHdlZXQ/dGV4dD0iICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5tZXNzYWdlCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJUd2l0dGVyIildCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAibWFpbHRvOj9zdWJqZWN0PSIgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLnRpdGxlICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICImYm9keT0iICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5tZXNzYWdlCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJFbWFpbCIpXQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF92bS5fbSgyKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICA6IF92bS5fZSgpCiAgICBdKQogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJwIiwgWwogICAgICBfdm0uX3YoCiAgICAgICAgIklmIHlvdSB3YW50IHRvIGNvbnRpbnVlIHRoZSBjb252ZXJzYXRpb24gd2l0aCB1cywgcGxlYXNlIGdldCBpbiB0b3VjaCAiCiAgICAgICksCiAgICAgIF9jKCJhIiwgeyBhdHRyczogeyB0YXJnZXQ6ICJfYmxhbmsiLCBocmVmOiAiIyIgfSB9LCBbX3ZtLl92KCJoZXJlIildKSwKICAgICAgX3ZtLl92KCIuIFlvdSBjYW4gYWxzbyBqb2luIG91ciBtYWlsaW5nIGxpc3QgIiksCiAgICAgIF9jKCJhIiwgeyBhdHRyczogeyB0YXJnZXQ6ICJfYmxhbmsiLCBocmVmOiAiIyIgfSB9LCBbX3ZtLl92KCJoZXJlIildKSwKICAgICAgX3ZtLl92KCIuIikKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJwIiwgWwogICAgICBfdm0uX3YoCiAgICAgICAgIlRvIGxlYXJuIG1vcmUgYWJvdXQgdGhlIHByb2plY3QgYW5kIHRvIGRpc2NvdmVyIG1vcmUgcmVzb3VyY2VzIG9uIGVtb3Rpb24gcmVjb2duaXRpb24gdGVjaG5vbG9naWVzLCB0aGVpciBzb2NpYWwgaW1wYWN0cywgYW5kIHRoZSBzb2NpYWwgc2NpZW5jZSBiZWhpbmQgdGhlbSwgY2xpY2sgIgogICAgICApLAogICAgICBfYygiYSIsIHsgYXR0cnM6IHsgdGFyZ2V0OiAiX2JsYW5rIiwgaHJlZjogIiMiIH0gfSwgW192bS5fdigiaGVyZSIpXSksCiAgICAgIF92bS5fdigiLiIpCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygibGkiLCBbCiAgICAgIF9jKAogICAgICAgICJhIiwKICAgICAgICB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBocmVmOiAiaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci5waHA/dT1odHRwczovL2Vtb2ppZnkuaW5mbyIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIFtfdm0uX3YoIkZhY2Vib29rIildCiAgICAgICkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}